#cloud-config
---
write-files:
- path: /etc/conf.d/nfs
  permissions: '0644'
  content: |
    OPTS_RPC_MOUNTD=""
coreos:
  etcd:
    discovery: to-be-generated
    addr: $private_ipv4:4001
    peer-addr: $private_ipv4:7001
  fleet:
    public-ip: $private_ipv4
    metadata: consul_role=server
  flannel:
    interface: $private_ipv4
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: rpc-statd.service
      command: start
    - name: consul-http-router.service
      command: start
      content: |
        [Unit]
        Description=consul-http-router
        After=consul-server.service
        [Service]
        Restart=always
        
        EnvironmentFile=/etc/environment
        ExecStartPre=-/usr/bin/docker kill %p
        ExecStartPre=-/usr/bin/docker rm %p
        ExecStartPre=-/usr/bin/docker pull cargonauts/consul-http-router
        ExecStart=/bin/sh -c "exec /usr/bin/docker run \
          --rm --name consul-http-router \
          -p :80:80 \
          --dns $(ifconfig docker0 | grep 'inet ' | awk '{print $2}') \
          --dns-search=service.consul \
          cargonauts/consul-http-router"
        ExecStop=/usr/bin/docker stop %p
        SyslogIdentifier=%p
        SuccessExitStatus=11 12
        [X-Fleet]
        MachineMetadata=consul_role=server
    - name: consul-server-registrator.service
      command: start
      content: |
        [Unit]
        Description=Registrator
        After=consul-server.service
        
        [Service]
        Restart=always
        TimeoutStartSec=3m
        EnvironmentFile=/etc/environment
        ExecStartPre=-/usr/bin/docker kill %p
        ExecStartPre=-/usr/bin/docker rm %p
        ExecStartPre=/bin/sh -c "/usr/bin/docker history gliderlabs/registrator:v6 || \
           /usr/bin/docker pull gliderlabs/registrator:v6"
        
        ExecStart=/bin/sh -c "exec /usr/bin/docker run \
          -v /var/run/docker.sock:/tmp/docker.sock \
           gliderlabs/registrator:v6 \
           -ip $COREOS_PRIVATE_IPV4 \
           -resync 60 \
           consul://$COREOS_PRIVATE_IPV4:8500"
        ExecStop=/usr/bin/docker stop %p
        SyslogIdentifier=%p
        SuccessExitStatus=2
        
        [X-Fleet]
        MachineMetadata=consul_role=server
    - name: consul-server.service
      command: start
      content: |
        [Unit]
        Description=Consul Server Agent
        After=docker.service
        After=etcd.service
        
        [Service]
        Restart=always
        TimeoutStartSec=180
        
        EnvironmentFile=/etc/environment
        ExecStartPre=-/usr/bin/docker kill %p
        ExecStartPre=-/usr/bin/docker rm %p
        
        ExecStartPre=/bin/sh -c \
            "docker history cargonauts/progrium-consul >/dev/null || \
            docker pull cargonauts/progrium-consul"
        
        ExecStart=/bin/sh -c "exec /usr/bin/docker run \
          --name %p \
          -h %H \
          -p $COREOS_PRIVATE_IPV4:8300:8300 \
          -p $COREOS_PRIVATE_IPV4:8301:8301 \
          -p $COREOS_PRIVATE_IPV4:8301:8301/udp \
          -p $COREOS_PRIVATE_IPV4:8302:8302 \
          -p $COREOS_PRIVATE_IPV4:8302:8302/udp \
          -p $COREOS_PRIVATE_IPV4:8400:8400 \
          -p $COREOS_PRIVATE_IPV4:8500:8500 \
          -p $(ifconfig docker0 | grep 'inet ' | awk '{print $2}'):53:53 \
          -p $(ifconfig docker0 | grep 'inet ' | awk '{print $2}'):53:53/udp \
          -e SERVICE_8500_NAME=consul-ui \
          -e SERVICE_8500_TAGS=http \
          -v /var/run/docker.sock:/var/run/docker.sock \
          cargonauts/progrium-consul \
          -server \
          -advertise $COREOS_PRIVATE_IPV4 \
          $(awk '/^nameserver/{print \" -recursor \" $2}' /etc/resolv.conf) \
          $(fleetctl list-units -no-legend -fields=unit,machine | sed -n -e 's/^%n[^\/]*\/\([0-9]\)/-join \1/p') \
          -bootstrap-expect 3"
        
        ExecStop=/usr/bin/docker stop %p
        SyslogIdentifier=%p
        SuccessExitStatus=1
        
        [X-Fleet]
        X-ConditionMachineMetadata=consul_role=server
